"use strict";
/**
 * To parse the results when the fetcher got one or more data.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.itemListParser = void 0;
var removeAllHtmlTag = function (text) {
    var result = text.replace(/<\/?\w+[^>]*>/gi, "");
    // To remove beginning and end of spaces
    result = result.replace(/^\s+/, "");
    result = result.replace(/\s+$/, "");
    return result;
};
var setItemWithTag = function (text, tag) {
    try {
        if (text.includes(tag)) {
            var newRegExp = new RegExp("<strong>\\d+<\\/strong>\\s*" + tag, "gi");
            var result = text.match(newRegExp);
            return result ? Number(result[0].replace(/\D/gi, "")) : null;
        }
        return null;
    }
    catch (error) {
        return null;
    }
};
var getItemPrice = function (htmlCode) {
    try {
        var result = htmlCode.match(/<ul class="list-nav clearfix">[\w\W]*?<\/ul>/gi);
        if (result) {
            return {
                discount: setItemWithTag(result[0], "折"),
                currentPrice: setItemWithTag(result[0], "元"),
            };
        }
        return {
            discount: null,
            currentPrice: null,
        };
    }
    catch (error) {
        return {
            discount: null,
            currentPrice: null,
        };
    }
};
var getItemImageUrl = function (htmlCode) {
    try {
        var result = htmlCode.match(/<img [\w\W]*?>/gi);
        if (result) {
            result = result[0].match(/srcset="[\w\W]*?"/gi);
        }
        return result
            ? result[0].replace(/srcset="https:\/\/im1\.book\.com\.tw\/image\/getImage\?i=([\w\W]*?)&[\w\W]*/gi, "$1")
            : null;
    }
    catch (error) {
        return null;
    }
};
var getItemAuthor = function (htmlCode) {
    try {
        var result = htmlCode.match(/<a rel='go_author'[\w\W]*?>[\w\W]*?<\/a>/gi);
        if (result && result.length > 0) {
            var resultWithoutHtmlTag = result.map(function (value) {
                return removeAllHtmlTag(value);
            });
            return resultWithoutHtmlTag;
        }
        return null;
    }
    catch (error) {
        return null;
    }
};
var getItemPublisher = function (htmlCode) {
    try {
        var result = void 0;
        if (htmlCode.includes('target="_blank" rel="mid_publish"')) {
            // For Chinese books
            result = htmlCode.match(/<a target="_blank" rel="mid_publish"[\w\W]*?>[\w\W]*?<\/a>/gi);
        }
        else {
            // For Western books
            result = htmlCode.match(/<a rel="mid_publish"[\w\W]*?>[\w\W]*?<\/a>/gi);
        }
        return result ? removeAllHtmlTag(result[0]) : null;
    }
    catch (error) {
        return null;
    }
};
var getItemPublicationDate = function (htmlCode) {
    try {
        var result = htmlCode.match(/出版日期: \d{4}-\d{2}-\d{2}/);
        return result ? result[0].replace("出版日期: ", "") : null;
    }
    catch (error) {
        return null;
    }
};
var getItemUrl = function (htmlCode) {
    try {
        var result = htmlCode.match(/<h4>[\w\W]*?<\/h4>/gi);
        if (result) {
            result = result[0].match(/<a [\w\W]*?<\/a>/gi);
        }
        return result ? result[0].replace(/<a [\w\W]*?href="([\w\W]*?)"[\w\W]*/gi, "http:$1") : null;
    }
    catch (error) {
        return null;
    }
};
var getItemTitle = function (htmlCode) {
    try {
        var result = htmlCode.match(/<h4>[\w\W]*?<\/h4>/gi);
        return result ? removeAllHtmlTag(result[0]) : null;
    }
    catch (error) {
        return null;
    }
};
var getItemIntroduction = function (htmlCode) {
    try {
        var result = htmlCode.match(/<p>[\w\W]*?<\/p>/gi);
        if (result) {
            // To remove useless texts like "更多資訊"
            var filterResult = result[0].replace(/<span>[\w\W]*?<\/span>/gi, "");
            return removeAllHtmlTag(filterResult);
        }
        return null;
    }
    catch (error) {
        return null;
    }
};
var getItem = function (htmlCode) {
    return {
        title: getItemTitle(htmlCode),
        url: getItemUrl(htmlCode),
        author: getItemAuthor(htmlCode),
        publisher: getItemPublisher(htmlCode),
        publicationDate: getItemPublicationDate(htmlCode),
        imageUrl: getItemImageUrl(htmlCode),
        price: getItemPrice(htmlCode),
        introduction: getItemIntroduction(htmlCode),
    };
};
var splitHtmlCode = function (htmlCode) {
    return htmlCode.match(/<tbody id="itemlist_[\w\d]+">[\w\W]*?<\/tbody>/gi);
};
var getSpecificHtmlCode = function (htmlCode) {
    var result = htmlCode.match(/<table id="itemlist_table" class="table-searchlist clearfix">[\w\W]*?<\/table>/gi);
    return result ? result[0] : null;
};
var itemListParser = function (htmlCode) { return __awaiter(void 0, void 0, void 0, function () {
    var targetHtmlCode, itemListWithCode, itemList;
    return __generator(this, function (_a) {
        targetHtmlCode = getSpecificHtmlCode(htmlCode);
        if (!targetHtmlCode)
            return [2 /*return*/, []];
        itemListWithCode = splitHtmlCode(targetHtmlCode);
        if (!Array.isArray(itemListWithCode) || itemListWithCode.length === 0)
            return [2 /*return*/, []];
        itemList = itemListWithCode.map(function (value) { return getItem(value); });
        return [2 /*return*/, itemList];
    });
}); };
exports.itemListParser = itemListParser;
